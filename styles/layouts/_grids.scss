/*
* MOBILE (<768px) ------------------------------------
* fixture ........................ sm
* # of columns ................... 4
* unit ........................... (100% - (5px * 2)) / 4 - 20px
* gutter ......................... 20px
* margin ......................... 5px
* container-size ................. 100% - 10px > 100% - (5px * 2)
*
*
* TABLET (>768px) ------------------------------------
* fixture ........................ md
* # of columns ................... 12
* unit ........................... 100% - (30px * 2) / 12 - 20px
* gutter ......................... 20px
* margin ......................... 30px
* container-size ................. 100% - 60px > 100% - (30px * 2)
* max-container-size ............. 960px
*
*
* DESKTOP (>1200px) ------------------------------------
* fixture ........................ lg
* # of columns ................... 12
* unit ........................... 75px
* gutter ......................... 20px
* margin ......................... auto
* container-size ................. 1140px
max-container-size ............... 1140px
*/

.container {
  width: 100%;
  padding: 0 $sm-margin; //상하 0px 좌우 $sm-margin만큼 빼기
  margin: 0 auto; //나중에 width 960같이 고정될 때에 마진이 양옆으로 알아서 배치되도록

  .row {
    display: flex; //flex기본값이 row기 때문에 그 부분은 생략
    flex-wrap: wrap; //기본값 nowrap인데 그건 자식들이 늘어나도 한줄에 구겨넣음, wrap은 다음줄로 만듦
  }

  //예를들어, 컬럼들은 .col-sm-4, .col-lg-2, .col-md-6 이런식일 것이다. 한번에 불러낼 수 있음, 앞자리가 항상 col임
  [class^='col-'] {
    //속성선택자 [class='col-']하면 col-인 클래스를 찾고 [class^='col-']하면 col로 시작되는 클래스를 찾음
    padding: 0 $gutter / 2;
    //컬럼들은 양쪽에 10px씩 두고 있기 때문에
  }

  @for $i from 1 through $sm-columns {
    //i라는 변수가 1부터 4까지 > $sm-columns은 4이다.
    .col-sm-#{$i} {
      //col-sm 클래스가 1~4까지 만들어짐, #{$i}로 하면 i가 가지고 있는 값으로 자동치환되어 코드가 짜짐
      width: percentage($i / $sm-columns);
      //4컬럼이기 때문에 col-sm-1은 25% (100의 1/4만큼, 100*1/4), col-sm-2은 50% (100의 2/4만큼, 100*2/4),
      //이런식으로 계산됨, 그러니까 $i가 1이 들어가면  $i(1) / $sm-columns(4) 자동계산됨, $i / $sm-columns * 100%
      //$i / $sm-columns * 100%하면 퍼센트로 나오는데 percentage로 감싸면 자동으로 퍼센트계산
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
